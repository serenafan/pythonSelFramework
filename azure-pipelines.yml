# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool:
  name: Azure Pipelines
  vmImage: 'ubuntu-20.04'
  
steps:

- script: | 
   pip install poetry
   poetry install
   
  displayName: 'Install software'

- script: 'poetry run pytest -s'
  displayName: 'run e2e tests'

- task: CopyFiles@2
  displayName: 'Copy test results'
  condition: succeededOrFailed()
  inputs:
    sourceFolder: $(Build.SourcesDirectory)/reports
    contents: '**'
    targetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Test Run Artifacts'
  condition: succeededOrFailed()
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'Test Run Artifacts'

- task: PublishTestResults@2
  displayName: 'Publish JUnit Report'
  condition: succeededOrFailed()
  inputs:
    testResultsFormat: Junit
    testResultsFiles: '$(Build.SourcesDirectory)/reports/report.xml'